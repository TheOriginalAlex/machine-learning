#!/usr/bin/env python
from tensorflow.examples.tutorials.mnist import input_data
import tensorflow as tf
mnist = input_data.read_data_sets("MNIST/", one_hot=True)

imgdim = mnist.train.images.shape[1]
clsnum = mnist.train.labels.shape[1]
x = tf.placeholder(tf.float32, [None, imgdim])
y = tf.placeholder(tf.float32, [None, clsnum])

W = tf.Variable(tf.zeros([imgdim, clsnum]))
b = tf.Variable(tf.zeros([clsnum]))
prediction = tf.nn.softmax(tf.matmul(x,W) + b)

cost = tf.reduce_mean(-tf.reduce_sum(y * tf.log(prediction), reduction_indices=[1]))

train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cost)

init = tf.initialize_all_variables()

sess = tf.Session()
sess.run(init)

for i in range(1000):
    batch_x, batch_y = mnist.train.next_batch(100)
    sess.run(train_step, feed_dict={x: batch_x, y: batch_y})

prediction_check = tf.equal(tf.argmax(prediction, 1), tf.argmax(y, 1))
accuracy = tf.reduce_mean(tf.cast(prediction_check, tf.float32))
print("The model is %.2f%% accurate." % (sess.run(accuracy, feed_dict={x: mnist.test.images, y: mnist.test.labels})*100))

sess.close()
